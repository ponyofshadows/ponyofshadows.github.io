<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Shadows&#39; Feelings</title>
    <link>https://ponyofshadows.com/posts/</link>
    <description>Recent content in Posts on Shadows&#39; Feelings</description>
    <image>
      <title>Shadows&#39; Feelings</title>
      <url>https://ponyofshadows.com/images/og-default.jpg</url>
      <link>https://ponyofshadows.com/images/og-default.jpg</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Wed, 06 Aug 2025 06:45:08 +0800</lastBuildDate>
    <atom:link href="https://ponyofshadows.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>个人积累python代码的策略</title>
      <link>https://ponyofshadows.com/posts/c/%E4%B8%AA%E4%BA%BA%E7%A7%AF%E7%B4%AFpython%E4%BB%A3%E7%A0%81%E7%9A%84%E7%AD%96%E7%95%A5/</link>
      <pubDate>Wed, 06 Aug 2025 06:45:08 +0800</pubDate>
      <guid>https://ponyofshadows.com/posts/c/%E4%B8%AA%E4%BA%BA%E7%A7%AF%E7%B4%AFpython%E4%BB%A3%E7%A0%81%E7%9A%84%E7%AD%96%E7%95%A5/</guid>
      <description>&lt;h2 id=&#34;python包管理&#34;&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV13WGHz8EEz&#34;&gt;python包管理&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;在archlinux上，安装python包有两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过系统包管理器安装，比如&lt;code&gt;sudo pacman -S python-pandas&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;创建虚拟环境，在某个项目路径下使用pip安装到虚拟环境。也可通过uv等现代工具管理。
为了避免依赖冲突，我推荐在积累自己的代码时只用第2种方式。第1种方式只用于系统在安装软件时安装某些python依赖项，而不用于手动安装项目依赖的python包.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;创建和使用虚拟环境的传统方法（推荐使用uv或poetry而不是这么做）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python -m venv .venv            &lt;span class=&#34;c1&#34;&gt;# 创建虚拟环境.venv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; .venv/bin/activate       &lt;span class=&#34;c1&#34;&gt;# 启用虚拟环境.venv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install pandas              &lt;span class=&#34;c1&#34;&gt;# 安装包到虚拟环境目录下(.venv/lib/pythonx.xx/site-packages)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip freeze &amp;gt; requirements.txt   &lt;span class=&#34;c1&#34;&gt;# 导出当前虚拟环境下安装的包（主动安装的包和它们的依赖混在一起）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install -r requirements.txt &lt;span class=&#34;c1&#34;&gt;# 通过包列表安装py包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;代替requirements.txt &amp;ndash; 现代python包管理的统一标准：pyproject.toml&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;proj&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.1.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;requires-python&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;gt;=3.13&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;dependencies&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;pandas==2.3.1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;有了这个文件后下面的命令，会对当前项目进行打包，然后和依赖项一起安装到虚拟环境下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install -e . &lt;span class=&#34;c1&#34;&gt;#使用-e是为了不将自己的源代码复制到虚拟环境，而只是创建链接，保证所有修改立即生效。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;以上流程又需要手动查包的版本号，所以产生了更加方便的工具，比如uv，它能把以上创建虚拟环境和编辑&lt;code&gt;pyproject.toml&lt;/code&gt;的流程自动化（只需要有个最初的包含项目版本号的&lt;code&gt;pyproject.toml&lt;/code&gt;文件）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;uv add pandas  &lt;span class=&#34;c1&#34;&gt;# 把某个包添加到虚拟环境（不需要手动启动虚拟环境）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;uv sync        &lt;span class=&#34;c1&#34;&gt;# 根据当前pyproject.toml文件搭建项目的虚拟环境&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;uv run main.py &lt;span class=&#34;c1&#34;&gt;# 在当前路径虚拟环境的上下文中执行命令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;python项目结构与打包&#34;&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV12NgLzhEKx&#34;&gt;python项目结构与打包&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;一般在用与包名相同的目录存放所有代码（flat layout）后，再把它放进&lt;code&gt;src/&lt;/code&gt;下（src layout）。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.
|_ doc/
|_ scratch/
|_ src/
    |_ myproject/
        |_ __init__.py  # 项目的代码目录中，这个文件作为可导入包的标记
|_ test/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;项目构建用工具&lt;/p&gt;</description>
    </item>
    <item>
      <title>细节的匮乏</title>
      <link>https://ponyofshadows.com/posts/f/%E7%BB%86%E8%8A%82%E7%9A%84%E5%8C%AE%E4%B9%8F/</link>
      <pubDate>Thu, 31 Jul 2025 10:21:06 +0800</pubDate>
      <guid>https://ponyofshadows.com/posts/f/%E7%BB%86%E8%8A%82%E7%9A%84%E5%8C%AE%E4%B9%8F/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;em&gt;本文由&lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Brain_autopsy_lateral_view.jpg/1280px-Brain_autopsy_lateral_view.jpg&#34;&gt;Human Brain&lt;/a&gt;生成，内容全为虚构，请仔细甄别。&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;对于哲学问题，我能想到的，一定有几百或几千年前的人早就说过了。
所以我写的这种文章毫无学术价值，只能作为笨人精神症状的记录。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;真理？爱？共同体？财富？你对这些抽象的词语产生过怀疑么&lt;/p&gt;
&lt;p&gt;作者很难只用一本厚书不放过任何细节地阐述一件事物，而且对读者来说，从头到尾读懂也是一种折磨；宣传者不会总是展现事件的全貌、会选择有利于自己立场的部分报道，而且观众也没耐心读完又臭又长的报告&amp;hellip; 总之，比起描述细节的话语，简短的话语更得人心。抽象的宏大叙事好处很多，它减轻了我们思考的负担、指引了人生的方向、凝聚了社会的共识。不过坏处是，有很多人（比如我）觉得自己脑子里抽象的东西太多、细节的东西太少，觉得自己脑海里重复的那一套话语和现实中的行为脱节，在注意到这一点后感到空虚和痛苦。&lt;/p&gt;
&lt;p&gt;比如，在说“我要为科学进步做贡献”的时候，心里想的是什么呢？也许是一张迷雾缭绕的地图，我作为勇敢的探险者，从前人走过的道路行至深处，直至人迹罕至、荆棘丛生之地，然后再往前多走几步。可是，研究生活距这样的浪漫表达甚远。比如某人的研究生生活，先是上一些教材很厚且满篇都是大段推导的课程，同时日常在宿舍打打游戏，混吃等死。等课上完后，再到实验室里打杂。配料、封管、开管、测试、做PPT，维护仪器、采购耗材&amp;hellip; 对几乎完全不理解的实验调调条件、重复实验、祈祷下次测出更强的信号——似乎抽象化能给一件事赋予魅力，但当你充分地和现实中的琐事打交道后，抽象的宏大叙事就开始滑稽起来。&lt;/p&gt;
&lt;p&gt;找到几句抽象的话，把它们当作独到的理解、人生的意义、终极的答案，这只是一种生活模式——一种把话语当成自己的主人的模式。我曾期望如此生活能让自己安心，但实际上，对现实有一定抽象的话语会构筑一道美好的幻景，它与现实的对比增添了不安；而抽象到底的话不过是富有哲理的废话，对舒缓我的情绪毫无作用。&lt;/p&gt;
&lt;p&gt;对唯物主义者来说，话语并非实体，无法在现实中成为庇护我们的港湾，它永远只是我们和现实打交道的手段。也许我真正匮乏的，并不是爱、金钱、博学、自由——那些在现代流行语中常见的人生彼岸。我觉得我真正匮乏的是那些用于联结现实的语言。我的五官和手足已经能让我看到、听到、闻到、触摸到现实，但我脑子里还有过剩的意识，对于我用我贫瘠的话语描绘的现实，它还不够满足，它还想要更细节、更深刻。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quick Note of Archlinux Installation</title>
      <link>https://ponyofshadows.com/posts/s/quick_note_of_archlinux_installation/</link>
      <pubDate>Wed, 30 Jul 2025 15:53:17 +0800</pubDate>
      <guid>https://ponyofshadows.com/posts/s/quick_note_of_archlinux_installation/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/Installation_guide&#34;&gt;Official Installation guide&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;pre-installation&#34;&gt;Pre-installation&lt;/h2&gt;
&lt;h3 id=&#34;acquire-an-installation-image&#34;&gt;Acquire an installation image&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://archlinux.org/download/&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mirrors.ustc.edu.cn/archlinux/iso/latest/&#34;&gt;中科大镜像源Archlinux ISO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;verify-signature&#34;&gt;Verify signature&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pacman-key -v archlinux-version-x86_64.iso.sig
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gpg --keyserver-options auto-key-retrieve --verify archlinux-version-x86_64.iso.sig
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the output is &lt;code&gt;Good signature&lt;/code&gt;, it is unchanged&lt;/p&gt;
&lt;h3 id=&#34;prepare-an-installation-medium&#34;&gt;Prepare an installation medium&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dd &lt;span class=&#34;nv&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;4M &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;path/to/archlinux-version-x86_64.iso &lt;span class=&#34;nv&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/disk/by-id/usb-My_flash_drive &lt;span class=&#34;nv&#34;&gt;conv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;fsync &lt;span class=&#34;nv&#34;&gt;oflag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;direct &lt;span class=&#34;nv&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;progress
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;boot-the-live-environment&#34;&gt;Boot the live environment&lt;/h3&gt;
&lt;p&gt;You need to &lt;a href=&#34;https://wiki.archlinux.org/title/Unified_Extensible_Firmware_Interface/Secure_Boot#Disabling_Secure_Boot&#34;&gt;disable Secure Boot&lt;/a&gt; to boot the installation medium.&lt;/p&gt;
&lt;h3 id=&#34;modify-the-mirrorlist&#34;&gt;modify the mirrorlist&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## Stop the automatic update of the mirror list&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;systemctl stop reflector.service
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;## edit it yourself&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vim /etc/pacman.d/mirrorlist
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These should be placed at the beginning of the list:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
