<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nvim on Pony of Shadows</title>
    <link>https://ponyofshadows.com/tags/nvim/</link>
    <description>Recent content in Nvim on Pony of Shadows</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Oct 2024 15:07:54 +0800</lastBuildDate>
    <atom:link href="https://ponyofshadows.com/tags/nvim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vim的稍微进阶的操作小技巧</title>
      <link>https://ponyofshadows.com/posts/tools/vim%E7%9A%84%E7%A8%8D%E5%BE%AE%E8%BF%9B%E9%98%B6%E7%9A%84%E6%93%8D%E4%BD%9C%E5%B0%8F%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sat, 26 Oct 2024 15:07:54 +0800</pubDate>
      <guid>https://ponyofshadows.com/posts/tools/vim%E7%9A%84%E7%A8%8D%E5%BE%AE%E8%BF%9B%E9%98%B6%E7%9A%84%E6%93%8D%E4%BD%9C%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid>
      <description>&lt;p&gt;是的，Neovim 提供了许多跳转的快捷键，可以让你快速在文件中移动。以下是一些常用的跳转快捷键：&lt;/p&gt;&#xA;&lt;h3 id=&#34;行内跳转&#34;&gt;行内跳转&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt;: 跳转到当前行的行首。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;^&lt;/code&gt;&lt;/strong&gt;: 跳转到当前行的第一个非空白字符。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;$&lt;/code&gt;&lt;/strong&gt;: 跳转到当前行的行尾。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;g_&lt;/code&gt;&lt;/strong&gt;: 跳转到当前行的最后一个非空白字符。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;行间跳转&#34;&gt;行间跳转&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;gg&lt;/code&gt;&lt;/strong&gt;: 跳转到文件的第一行。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;G&lt;/code&gt;&lt;/strong&gt;: 跳转到文件的最后一行。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;nG&lt;/code&gt;&lt;/strong&gt;: 跳转到文件的第 n 行，例如 &lt;code&gt;10G&lt;/code&gt; 会跳转到第 10 行。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;H&lt;/code&gt;&lt;/strong&gt;: 跳转到屏幕上的第一行（窗口顶部）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;M&lt;/code&gt;&lt;/strong&gt;: 跳转到屏幕上的中间一行。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;L&lt;/code&gt;&lt;/strong&gt;: 跳转到屏幕上的最后一行（窗口底部）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;ctrl-d&lt;/code&gt;&lt;/strong&gt;: 向下滚动半个屏幕。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;ctrl-u&lt;/code&gt;&lt;/strong&gt;: 向上滚动半个屏幕。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;ctrl-f&lt;/code&gt;&lt;/strong&gt;: 向下滚动一个屏幕。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;ctrl-b&lt;/code&gt;&lt;/strong&gt;: 向上滚动一个屏幕.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;zz&lt;/code&gt;&lt;/strong&gt;: 当前行居中显示（保持光标在当前行，将其滚动到窗口中间）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;zt&lt;/code&gt;&lt;/strong&gt;: 当前行在窗口顶部显示（保持光标在当前行，将其滚动到窗口顶部）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;zb&lt;/code&gt;&lt;/strong&gt;: 当前行在窗口底部显示（保持光标在当前行，将其滚动到窗口底部）。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;单词和字符跳转&#34;&gt;单词和字符跳转&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;w&lt;/code&gt;&lt;/strong&gt;: 跳转到下一个单词的开头。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;e&lt;/code&gt;&lt;/strong&gt;: 跳转到当前/下一个单词的结尾。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;b&lt;/code&gt;&lt;/strong&gt;: 跳转到当前/上一个单词的开头。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;ge&lt;/code&gt;&lt;/strong&gt;: 跳转到当前/上一个单词的结尾。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;搜索跳转&#34;&gt;搜索跳转&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;/pattern&lt;/code&gt;&lt;/strong&gt;: 向下搜索指定的 &lt;code&gt;pattern&lt;/code&gt;，然后按 &lt;code&gt;n&lt;/code&gt; 跳转到下一个匹配项，&lt;code&gt;N&lt;/code&gt; 跳转到上一个匹配项。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;?pattern&lt;/code&gt;&lt;/strong&gt;: 向上搜索指定的 &lt;code&gt;pattern&lt;/code&gt;，同样可以用 &lt;code&gt;n&lt;/code&gt; 和 &lt;code&gt;N&lt;/code&gt; 跳转到下/上一个匹配项。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;*&lt;/code&gt;&lt;/strong&gt;: 向下搜索光标所在的单词。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;#&lt;/code&gt;&lt;/strong&gt;: 向上搜索光标所在的单词。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;符号跳转&#34;&gt;符号跳转&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;%&lt;/code&gt;&lt;/strong&gt;: 在配对的符号（如括号 &lt;code&gt;()&lt;/code&gt;、大括号 &lt;code&gt;{}&lt;/code&gt;、方括号 &lt;code&gt;[]&lt;/code&gt; 等）之间跳转。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;标记跳转&#34;&gt;标记跳转&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;m{letter}&lt;/code&gt;&lt;/strong&gt;: 设置一个标记。例如，&lt;code&gt;ma&lt;/code&gt; 将标记当前光标位置为 &lt;code&gt;a&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;{letter}&lt;/code&gt;&lt;/strong&gt;: 跳转到标记的位置。例如，&lt;code&gt;&#39;a&lt;/code&gt; 会跳转到标记 &lt;code&gt;a&lt;/code&gt; 处。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;&#39;&lt;/code&gt;&lt;/strong&gt;: 跳转到最后一次离开的位置。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;光标历史跳转&#34;&gt;光标历史跳转&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;ctrl-o&lt;/code&gt;&lt;/strong&gt;: 回到上一个光标位置。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;ctrl-i&lt;/code&gt;&lt;/strong&gt;: 前进到下一个光标位置（配合 &lt;code&gt;ctrl-o&lt;/code&gt; 使用）。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;句子和段落跳转&#34;&gt;句子和段落跳转&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;(&lt;/code&gt;&lt;/strong&gt;: 跳转到上一个句子的开头。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;)&lt;/code&gt;&lt;/strong&gt;: 跳转到下一个句子的开头。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;{&lt;/code&gt;&lt;/strong&gt;: 跳转到上一个段落的开头。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;}&lt;/code&gt;&lt;/strong&gt;: 跳转到下一个段落的开头。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;标签跳转&#34;&gt;标签跳转&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;gt&lt;/code&gt;&lt;/strong&gt;: 在标签页之间切换（向前切换）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;gT&lt;/code&gt;&lt;/strong&gt;: 在标签页之间切换（向后切换）。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这些快捷键可以帮助你在文件中快速导航，特别是当你在编写长文档或代码时，提高工作效率。你可以根据自己的需求组合和使用它们。&lt;/p&gt;</description>
    </item>
    <item>
      <title>nvim中tex文件后缀名与补全的问题</title>
      <link>https://ponyofshadows.com/posts/tools/nvim%E4%B8%ADtex%E6%96%87%E4%BB%B6%E5%90%8E%E7%BC%80%E5%90%8D%E4%B8%8E%E8%A1%A5%E5%85%A8%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 26 Sep 2024 10:28:42 +0800</pubDate>
      <guid>https://ponyofshadows.com/posts/tools/nvim%E4%B8%ADtex%E6%96%87%E4%BB%B6%E5%90%8E%E7%BC%80%E5%90%8D%E4%B8%8E%E8%A1%A5%E5%85%A8%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;在nvim的命令模式，可以这样知道nvim给当前文件分配的类型：&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;goat svg-container &#34;&gt;&#xA;  &#xA;    &lt;svg&#xA;      xmlns=&#34;http://www.w3.org/2000/svg&#34;&#xA;      font-family=&#34;Menlo,Lucida Console,monospace&#34;&#xA;      &#xA;        viewBox=&#34;0 0 120 25&#34;&#xA;      &gt;&#xA;      &lt;g transform=&#39;translate(8,16)&#39;&gt;&#xA;&lt;text text-anchor=&#39;middle&#39; x=&#39;0&#39; y=&#39;4&#39; fill=&#39;currentColor&#39; style=&#39;font-size:1em&#39;&gt;:&lt;/text&gt;&#xA;&lt;text text-anchor=&#39;middle&#39; x=&#39;8&#39; y=&#39;4&#39; fill=&#39;currentColor&#39; style=&#39;font-size:1em&#39;&gt;s&lt;/text&gt;&#xA;&lt;text text-anchor=&#39;middle&#39; x=&#39;16&#39; y=&#39;4&#39; fill=&#39;currentColor&#39; style=&#39;font-size:1em&#39;&gt;e&lt;/text&gt;&#xA;&lt;text text-anchor=&#39;middle&#39; x=&#39;24&#39; y=&#39;4&#39; fill=&#39;currentColor&#39; style=&#39;font-size:1em&#39;&gt;t&lt;/text&gt;&#xA;&lt;text text-anchor=&#39;middle&#39; x=&#39;40&#39; y=&#39;4&#39; fill=&#39;currentColor&#39; style=&#39;font-size:1em&#39;&gt;f&lt;/text&gt;&#xA;&lt;text text-anchor=&#39;middle&#39; x=&#39;48&#39; y=&#39;4&#39; fill=&#39;currentColor&#39; style=&#39;font-size:1em&#39;&gt;i&lt;/text&gt;&#xA;&lt;text text-anchor=&#39;middle&#39; x=&#39;56&#39; y=&#39;4&#39; fill=&#39;currentColor&#39; style=&#39;font-size:1em&#39;&gt;l&lt;/text&gt;&#xA;&lt;text text-anchor=&#39;middle&#39; x=&#39;64&#39; y=&#39;4&#39; fill=&#39;currentColor&#39; style=&#39;font-size:1em&#39;&gt;e&lt;/text&gt;&#xA;&lt;text text-anchor=&#39;middle&#39; x=&#39;72&#39; y=&#39;4&#39; fill=&#39;currentColor&#39; style=&#39;font-size:1em&#39;&gt;t&lt;/text&gt;&#xA;&lt;text text-anchor=&#39;middle&#39; x=&#39;80&#39; y=&#39;4&#39; fill=&#39;currentColor&#39; style=&#39;font-size:1em&#39;&gt;y&lt;/text&gt;&#xA;&lt;text text-anchor=&#39;middle&#39; x=&#39;88&#39; y=&#39;4&#39; fill=&#39;currentColor&#39; style=&#39;font-size:1em&#39;&gt;p&lt;/text&gt;&#xA;&lt;text text-anchor=&#39;middle&#39; x=&#39;96&#39; y=&#39;4&#39; fill=&#39;currentColor&#39; style=&#39;font-size:1em&#39;&gt;e&lt;/text&gt;&#xA;&lt;text text-anchor=&#39;middle&#39; x=&#39;104&#39; y=&#39;4&#39; fill=&#39;currentColor&#39; style=&#39;font-size:1em&#39;&gt;?&lt;/text&gt;&#xA;&lt;/g&gt;&#xA;&#xA;    &lt;/svg&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&lt;p&gt;luasnip就是根据这个文件类型应用snip配置的。&lt;/p&gt;&#xA;&lt;p&gt;可能因为是lsp的texlab的设定，刚创建的.tex文件的类型会被分配为&lt;code&gt;plaintex&lt;/code&gt;。&#xA;当文件包含特定的 LaTeX 结构（比如包含documentclass和document环境），才会被分配为&lt;code&gt;tex&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;可以改变nvim的配置强制把.tex文件强制都分配为&lt;code&gt;tex&lt;/code&gt;类型：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim.cmd(&lt;span style=&#34;color:#e6db74&#34;&gt;[[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  autocmd BufNewFile,BufRead *.tex set filetype=tex&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]]&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但不建议这么做，疑似会与默认的texlab配置冲突，导致texlab出bug，一直在后台吃CPU。&lt;/p&gt;&#xA;&lt;p&gt;如果想要luasnip的针对latex的补全一直生效，可以创建&lt;code&gt;tex&lt;/code&gt;补全路径的软链接&lt;code&gt;plaintex&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
